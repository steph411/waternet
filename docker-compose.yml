version: "3.9"

services:
  database:
    image: postgres:12
    container_name: ewatergate_database
    ports:
      - "8899:5432"
    volumes:
      - ./db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ewatergate
      POSTGRES_USER: ewatergate
      POSTGRES_DATABASE: ewatergate

  graphql-api:
    container_name: ewatergate_api
    image: hasura/graphql-engine:latest
    deploy:
      resources:
        limits:
          memory: 3G
    ports:
      - "8889:8080"
    depends_on:
      - "database"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://ewatergate:ewatergate@ewatergate_database:5432/ewatergate
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "public"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ewatergate-api
      HASURA_GRAPHQL_JWT_SECRET: '{"type": "HS512", "key": "0ddf5597e02d981f8803c4cc11f015a4e52679d706edb29b595d9e466def5bcf95273a3053ab5d97ee893c23e4023b912daefaade316406a33b7685d4d223dfa", "claims_namespace": "api"}'
    # networks:
    # - ewatergate

  # ui:
  #   container_name: ewatergate_ui
  #   build: ./app
  #   ports:
  #     - "8888:3000"
  #   volumes:
  #     - ./app:/app
  #   depends_on:
  #     - "graphql-api"

  # server:
  #   container_name: ewatergate_server
  #   build: ./nginx
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - "ui"
  #     - "graphql-api"
